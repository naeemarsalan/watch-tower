# üìå 1Ô∏è‚É£ Service Account for Watch-Tower
apiVersion: v1
kind: ServiceAccount
metadata:
  name: watch-tower-sa
  namespace: aap-24  # ‚úÖ Ensure it's in the correct namespace

---
# üìå 2Ô∏è‚É£ RBAC Role (Allows Watch-Tower to Get/List/Patch AutomationController CRD)
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: watch-tower-role
  namespace: aap-24  # ‚úÖ Ensure it's in the correct namespace
rules:
  - apiGroups: ["automationcontroller.ansible.com"]  # ‚úÖ Correct API Group
    resources: ["automationcontrollers"]
    verbs: ["get", "list", "watch", "patch"]

  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get"]

---
# üìå 3Ô∏è‚É£ RoleBinding (Binds the Service Account to the Role)
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: watch-tower-rolebinding
  namespace: aap-24  # ‚úÖ Ensure it's in the correct namespace
subjects:
  - kind: ServiceAccount
    name: watch-tower-sa
    namespace: aap-24  # ‚úÖ Ensure it matches the ServiceAccount namespace
roleRef:
  kind: Role
  name: watch-tower-role
  apiGroup: rbac.authorization.k8s.io

---
# üìå 4Ô∏è‚É£ Deployment for Watch-Tower
apiVersion: apps/v1
kind: Deployment
metadata:
  name: watch-tower
  labels:
    app: watch-tower
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watch-tower
  template:
    metadata:
      labels:
        app: watch-tower
    spec:
      securityContext:
        runAsNonRoot: true  # ‚úÖ Ensures it does not run as root
        runAsUser: 1001  # ‚úÖ OpenShift assigns an arbitrary UID (fixes SCC issues)
      serviceAccountName: watch-tower-sa  # ‚úÖ Uses ServiceAccount for API access
      containers:
        - name: watch-tower
          image: docker.io/naeemarsalan/watch-tower:v0.0.1
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false  # ‚úÖ Prevents privilege escalation
            readOnlyRootFilesystem: true  # ‚úÖ Forces a read-only filesystem
            capabilities:
              drop:
                - "ALL"  # ‚úÖ Required by OpenShift for restricted mode
            seccompProfile:
              type: RuntimeDefault  # ‚úÖ Required for restricted mode
          env:
            - name: DB_CREDENTIAL_PATH
              value: "/srv/db_credential/credentials.py"  # ‚úÖ Path where the secret is mounted
            - name: AAP_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace  # ‚úÖ Automatically uses the namespace
          volumeMounts:
            - name: db-credentials
              mountPath: "/srv/db_credential"  # ‚úÖ Mounts secret at this path
              readOnly: true
      volumes:
        - name: db-credentials
          secret:
            secretName: controller-edb-01-app-credentials  # ‚úÖ Secret name
            items:
              - key: credentials.py
                path: credentials.py  # ‚úÖ Mounts secret as credentials.py

